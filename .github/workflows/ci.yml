name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      MIX_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/boonorbust2_test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18'
        otp-version: '28'

    - name: Cache Mix dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Cache PLT files
      uses: actions/cache@v3
      with:
        path: priv/plts
        key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('**/*.ex') }}
        restore-keys: |
          ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}-
          ${{ runner.os }}-plt-

    - name: Install dependencies
      run: mix deps.get

    - name: Create PLT cache directory
      run: mkdir -p priv/plts

    - name: Run quality checks (format, credo, dialyzer)
      run: mix quality

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Run tests
      run: mix test

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest

    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --app boonorbust2
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
